/**********************************************************************************************************************
 * \file OurCan_regdef.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef OURCAN_DEF_H_
#define OURCAN_DEF_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/

// 모든 메시지가 4바이트 이하라고 가정해야 가능, 8바이트 메시지 쓸거면 unsigned long으로 바꿔야
// Message Name : Function
typedef struct
{
    unsigned int Temp_Hum_alive : 1; /**< \brief [0:0] 전원 (ON/OFF) */
    unsigned int Temperature : 6;    /**< \brief [6:1] 온도 (0~50) */
    unsigned int Humiditiy : 7;      /**< \brief [13:7] 습도 (0~90) */
    unsigned int Flag : 1;           /**< \brief -> Interrupt Flag*/

} OurCanTHSensorBits;

typedef union
{
    unsigned int U;       /**< \brief Unsigned access */
    signed int I;         /**< \brief Signed access */
    OurCanTHSensorBits B; /**< \brief Bitfield access */
} OurCanTHSensor;

typedef struct
{
    unsigned int Air_state : 2;     /**< \brief [1:0] 전원 (0~2) */
    unsigned int Air_fan_speed : 2; /**< \brief [2:1] 온도 (0~2) */
    unsigned int Flag : 1;          /**< \brief -> Interrupt Flag*/

} OurCanACControlBits;

typedef union
{
    unsigned int U;        /**< \brief Unsigned access */
    signed int I;          /**< \brief Signed access */
    OurCanACControlBits B; /**< \brief Bitfield access */
} OurCanACControl;

/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/

#endif /* OURCAN_DEF_H_ */
