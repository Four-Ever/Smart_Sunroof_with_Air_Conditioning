/**********************************************************************************************************************
 * \file queue.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef INC_QUEUE_H_
#define INC_QUEUE_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include "Platform_Types.h"
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
typedef struct node{
        char value;
        struct node *prev;
        struct node *next;
}NODE;

typedef struct _queue{
        NODE *head;
        NODE *tail;
}QUEUE;

typedef enum{
    CLOSE_WINDOW = 1,           // 창문을 닫습니다.
    OPEN_WINDOW,                // 창문이 열립니다.
    CLOSE_SUNROOF,              // 선루프를 닫습니다.
    OPEN_SUNROOF,               // 선루프가 열립니다.
    ACTIVATE_AIRCON,            // 에어컨을 작동합니다.
    DEACTIVATE_AIRCON,          // 에어컨을 종료합니다.
    ACTIVATE_HEATER,            // 히터를 작동합니다.
    DEACTIVATE_HEATER,          // 히터를 종료합니다.
    OPEN_WINDOW_AND_SUNROOF,    // 창문과 선루프가 열립니다.
    CLOSE_WINDOW_AND_SUNROOF,   // 창문과 선루프가 닫힙니다.
    SMART_CONTROL_PAUSE,        // 스마트 제어가 종료되고, 10분 후에 다시 작동합니다.
    HIGH_FINE_DUST,             // 미세먼지가 많습니다.
    IS_RAIN_DETECTED,           // 비가 옵니다.
    INDOOR_HOT,                 // 실내가 덥습니다.
    INDOOR_COLD,                // 실내가 춥습니다.
    INDOOR_AIR_BAD,             // 실내 공기가 안 좋습니다.
    ENTER_TUNNEL,               // 터널에 진입합니다.
    EXIT_TUNNEL,                // 터널을 통과했습니다.
    EXIT_TUNNEL_AND_OPEN_WINDOW_AND_SUNROOF, // 터널 통과 + 창문과 선루프가 열린다.
    INDOOR_AIR_BAD_AND_OPEN_WINDOW_AND_SUNROOF, // 실내 공기 안좋아 + 창문과 선루프가 열린다.
    ENTER_TUNNEL_AND_CLOSE_WINDOW_AND_SUNROOF, // 터널 진입 + 창문과 선루프를 닫는다.
    HIGH_FINE_DUST_AND_CLOSE_WINDOW_AND_SUNROOF, // 미세먼지 많아 + 창문과 선루프를 닫는다.
    IS_RAIN_DETECTED_AND_CLOSE_SUNROOF, // 비가 온다 + 선루프를 닫는다.
    INDOOR_HOT_AND_ACTIVATE_AIRCON, // 실내가 덥다 + 에어컨을 작동한다.
    INDOOR_COLD_AND_ACTIVATE_HEATER, // 실내가 춥다 + 히터를 작동한다.

    DEFAULT = 99                // 초기값
}AudioControlState;
/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
QUEUE *queue_create(void);
boolean queue_isempty(QUEUE *q);
void queue_enqueue(QUEUE *q, AudioControlState value);
void queue_dequeue(QUEUE *q, AudioControlState *value);
/*********************************************************************************************************************/


#endif /* INC_QUEUE_H_ */
